First Spring Project (CRUD) using Postman (Rest API)
--------------------------------------------------------------------

User.java
------------
package pack.spring.application.Model;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.Table;

@Entity
@Table(name="Employee")
public class User {

	@Id
	private int id;
	public int getId() {
		return id;
	}
	public void setId(int id) {
		this.id = id;
	}
	@Column(name="username")
	private String username;
	public String getUsername() {
		return username;
	}
	public void setUsername(String username) {
		this.username = username;
	}
	@Column(name="password")
	private String password;
	public String getPassword() {
		return password;
	}
	public void setPassword(String password) {
		this.password = password;
	}
}

EmployeeRepository.java
-------------------------------
package pack.spring.application.repository;

import org.springframework.data.jpa.repository.JpaRepository;

import pack.spring.application.Model.User;

public interface EmployeeRepository extends JpaRepository<User, Integer> {

}

EmployeeService.java
---------------------------
package pack.spring.application.Service;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import pack.spring.application.Model.User;
import pack.spring.application.repository.EmployeeRepository;

@Service
public class EmployeeService {

	@Autowired
	EmployeeRepository empRepository;
	
	public List<User> getAllUser() {
		List <User> user = new ArrayList<User>();
		empRepository.findAll().forEach(user1 -> user.add(user1));
		return user;
	}

	//Finding a record by using the method findById()
	public User getEmpById(int id) {
		// TODO Auto-generated method stub
		return empRepository.findById(id).get();
	}

	//deleting a specific record by using the method deleteById()
	public void delete(int id) {
		// TODO Auto-generated method stub
		empRepository.deleteById(id);
	}

	//Saving a specific record by using the method save()
	public void saveorUpdate(User user) {
		// TODO Auto-generated method stub
		empRepository.save(user);
	}
}

EmployeeController.java
------------------------------
package pack.spring.application.Controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import pack.spring.application.Model.User;
import pack.spring.application.Service.EmployeeService;

@RestController
public class EmployeeController {

	@Autowired
	EmployeeService empService;
	
	@GetMapping("/user")
	private List<User> getAllUsers(){
	
		return empService.getAllUser();
	}
	
	@GetMapping("/user/{id}")
	private User getUser(@PathVariable("id") int id) {
		return empService.getEmpById(id);
	}
	
	@DeleteMapping("/user/{id}")
	private void deleteemp(@PathVariable("id") int id) {
		empService.delete(id);
	}
	
	@PostMapping("/user")
	private int saveEmployee(@RequestBody User user) {
		empService.saveorUpdate(user);
		return user.getId();
	}
}
