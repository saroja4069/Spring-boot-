Mapping in Spring
-----------------------

StudentInformation.java
------------------------------
package pack.spring.application.Model;

import java.util.Set;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;

@Entity
//Adding the table name
@Table(name="Student1")
public class StudentInformation {

	//Default Constructor
	public StudentInformation() {}
	//Parameterized Constructor
	public StudentInformation(int rollno, String uname) {
		//super();
		this.rollno = rollno;
		this.uname = uname;
	}
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private int rollno;
	public int getRollno() {
		return rollno;
	}
	public void setRollno(int rollno) {
		this.rollno = rollno;
	}
	private String uname;
	public String getUname() {
		return uname;
	}
	public void setUname(String uname) {
		this.uname = uname;
	}
	//Mapping to the other table
	@OneToMany(cascade = CascadeType.ALL)//Cascade Autoupdate
	private Set<Address> ob;
}

Address.java
----------------
package pack.spring.application.Model;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;

@Entity
//Adding the table name
@Table(name="Address")
public class Address {

	//Default Constructor
	Address() {}
	//Parameterized Constructor
	public Address(int id, String cityname, StudentInformation ob1) {
		//super();
		this.id = id;
		this.cityname = cityname;
	}
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)//@GeneratedValue to auto
	private int id;
	/*public int getId() {
		return id;
	}
	public void setId(int id) {
		this.id = id;
	}*/
	private String cityname;
	/*public String getCityname() {
		return cityname;
	}
	public void setCityname(String cityname) {
		this.cityname = cityname;
	}*/
	
	//Table Relation codes
	//Maping the column of this table
	@ManyToOne
	//Adding the name
	@JoinColumn(name = "Student_id")//foreign key
	StudentInformation ob;
}

StudentRepo.java(Interface)
-----------------------------------
package pack.spring.application.Repository;

import org.springframework.data.jpa.repository.JpaRepository;

import pack.spring.application.Model.StudentInformation;



public interface StudentRepo extends JpaRepository<StudentInformation, Integer>{

}

AddressRepo.java (Interface)
------------------------------------
package pack.spring.application.Repository;

import org.springframework.data.jpa.repository.JpaRepository;

import pack.spring.application.Model.Address;

public interface AddressRepo extends JpaRepository<Address, Integer>{

}

FifteenthSpringApplication.java
----------------------------------------
package pack.spring.application;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

import pack.spring.application.Model.Address;
import pack.spring.application.Model.StudentInformation;
import pack.spring.application.Repository.AddressRepo;
import pack.spring.application.Repository.StudentRepo;

@SpringBootApplication
public class FifteenthSpringApplication implements CommandLineRunner{

	@Autowired
	StudentRepo ob;
	@Autowired
	AddressRepo ob1;
	
	public static void main(String[] args) {
		SpringApplication.run(FifteenthSpringApplication.class, args);
	}
//Now it acts like thread
	@Override
	public void run(String... args) throws Exception 
	{
		// TODO Auto-generated method stub
		StudentInformation student = new StudentInformation(1, "Saroja");
		ob.save(student);
		Address address = new Address(1, "Chennai", student);
		ob1.save(address);
	}

}

application.properties
---------------------------
spring.datasource.url=jdbc:mysql://localhost:3306/emp
spring.datasource.username=root
spring.datasource.password=Saroja@25
spring.jpa.hibernate.ddl-auto=update

pom.xml
-----------
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.2</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>pack.spring.application</groupId>
	<artifactId>FifteenthSpringApplication</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>FifteenthSpringApplication</name>
	<description>Demo project for Spring Boot</description>
	<properties>
		<java.version>17</java.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>

